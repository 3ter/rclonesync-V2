:MSG:	Sync should fail due to too many Path2 deletes
../rclonesync.py ./testdir/path1/ ./testdir/path2/ --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone
***** BiDirectional Sync for Cloud Services using rclone *****
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command line:  <Namespace(Path1='./testdir/path1/', Path2='./testdir/path2/', check_access=False, check_filename='RCLONE_TEST', dry_run=False, filters_file=None, first_sync=False, force=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone='rclone', remove_empty_directories=False, verbose=True, workdir='./testwd/')>
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
  Path2      File was deleted                  - file1.txt
  Path2      File was deleted                  - file2.txt
  Path2      File was deleted                  - file3.txt
  Path2      File was deleted                  - file4.txt
  Path2      File was deleted                  - file5.txt
     5 file change(s) on Path2:    0 new,    0 newer,    0 older,    5 deleted
Excessive number of deletes (>50%, 5 of 9) found on the Path2 filesystem <./testdir/path2/> - Aborting.  Run with --force if desired.
***** Error Abort.  Try running rclonesync again. *****

:MSG:   Apply --force switch, and sync should run.
../rclonesync.py ./testdir/path1/ ./testdir/path2/ --force --verbose --workdir ./testwd/ --no-datetime-log --rclone rclone
***** BiDirectional Sync for Cloud Services using rclone *****
Synching Path1  <./testdir/path1/>  with Path2  <./testdir/path2/>
Command line:  <Namespace(Path1='./testdir/path1/', Path2='./testdir/path2/', check_access=False, check_filename='RCLONE_TEST', dry_run=False, filters_file=None, first_sync=False, force=True, max_deletes=50, no_datetime_log=True, rc_verbose=None, rclone='rclone', remove_empty_directories=False, verbose=True, workdir='./testwd/')>
>>>>> Path1 Checking for Diffs
>>>>> Path2 Checking for Diffs
  Path2      File was deleted                  - file1.txt
  Path2      File was deleted                  - file2.txt
  Path2      File was deleted                  - file3.txt
  Path2      File was deleted                  - file4.txt
  Path2      File was deleted                  - file5.txt
     5 file change(s) on Path2:    0 new,    0 newer,    0 older,    5 deleted
>>>>> Applying changes on Path2 to Path1
  Path1      Deleting file                     - ./testdir/path1/file1.txt
  Path1      Deleting file                     - ./testdir/path1/file2.txt
  Path1      Deleting file                     - ./testdir/path1/file3.txt
  Path1      Deleting file                     - ./testdir/path1/file4.txt
  Path1      Deleting file                     - ./testdir/path1/file5.txt
>>>>> Synching Path1 to Path2
>>>>> Refreshing Path1 and Path2 lsl files
>>>>> Successful run.  All done.

